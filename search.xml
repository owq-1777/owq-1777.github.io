<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Test</title>
    <url>/posts/3825/</url>
    <content><![CDATA[<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><blockquote>
<p>引用</p>
</blockquote>
<p>加粗: <strong>重点</strong></p>
<p>加斜: <em>温馨提示</em></p>
<p>代码块: <code>ddcp</code></p>
<p>删除: <del>18🈲</del></p>
<p>超链接: <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2h4aS5jb20v">果壳</span></p>
<p>🧓👼🙄😶😴</p>
<hr>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img data-src="https://i.loli.net/2021/08/03/ZtwnsAa7BrNI2gX.png"></p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<hr>
<ol>
<li>一</li>
<li>二</li>
<li>三</li>
</ol>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Hello hexo&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ...</span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> No such file or directory: <span class="string">&#x27;curl-config&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装通用包</span></span><br><span class="line">sudo apt-get install libssl-dev libcurl4-openssl-dev python3-dev</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> invalid <span class="built_in">command</span> <span class="string">&#x27;bdist_wheel&#x27;</span></span></span><br><span class="line">pip3 install wheel</span><br></pre></td></tr></table></figure>



<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">昵称</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">老三</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">老四</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">老五</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Other</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL2 安装配置</title>
    <url>/posts/1fe3c459/</url>
    <content><![CDATA[<h2 id="升级到WSL2"><a href="#升级到WSL2" class="headerlink" title="升级到WSL2"></a>升级到WSL2</h2><blockquote>
<p>WSL1 升级 WSL2 官方传送门 -&gt; <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93c2wvaW5zdGFsbC13aW4xMA==">🚪</span></p>
</blockquote>
<h2 id="安装-WSL"><a href="#安装-WSL" class="headerlink" title="安装 WSL"></a>安装 WSL</h2><p>安装子系统方式有三, 根据个人喜好选择.</p>
<ul>
<li><p>微软商店搜索安装</p>
<ul>
<li><code>Win + S</code> 搜索 Store 打开 <code>Microsoft Store</code> 搜索 linux 找到对应版本安装即可.</li>
</ul>
</li>
<li><p>手动下载安装包安装</p>
<ul>
<li>官方下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy93c2wvaW5zdGFsbC1tYW51YWwjZG93bmxvYWRpbmctZGlzdHJpYnV0aW9ucw==">https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#downloading-distributions</span></li>
<li>其它Linux地址<ul>
<li>ArchWSL:<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3l1azcvQXJjaFdTTA==">https://github.com/yuk7/ArchWSL</span> </li>
</ul>
</li>
</ul>
</li>
<li><p>命令行安装<br>不同发行版安装命令, 使用<code>PowerShell</code>执行, 链接为包链接.</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Kali Linux</span></span><br><span class="line"><span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> https://aka.ms/wsl<span class="literal">-kali</span><span class="literal">-linux</span><span class="literal">-new</span> <span class="literal">-OutFile</span> Ubuntu.appx <span class="literal">-UseBasicParsing</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 20.04</span></span><br><span class="line"><span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> https://aka.ms/wslubuntu2004 <span class="literal">-OutFile</span> Ubuntu.appx <span class="literal">-UseBasicParsing</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="WSL位置移动-可选"><a href="#WSL位置移动-可选" class="headerlink" title="WSL位置移动(可选)"></a>WSL位置移动(可选)</h2><blockquote>
<p>这里使用LxRunOffline工具移动 下载传送门 -&gt;  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0REb1NvbGl0YXJ5L0x4UnVuT2ZmbGluZS9yZWxlYXNlcw==">🚪</span></p>
</blockquote>
<p>简单使用, 解压压缩包然后在解压的软件目录处打开命令行, 就可以直接使用.<br>将解压目录添加到环境变量可全局使用.</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看已安装 wsl 名称</span></span><br><span class="line">wsl <span class="literal">-l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动 wsl 到指定目录</span></span><br><span class="line">LxRunOffline <span class="built_in">move</span> <span class="literal">-n</span> &lt;wsl<span class="literal">-name</span>&gt; <span class="literal">-d</span> &lt;<span class="built_in">dir</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">lxrunoffline m <span class="literal">-n</span> docker<span class="literal">-desktop</span> <span class="literal">-d</span> D:\OWQ\Docker\wsl\distro</span><br><span class="line">lxrunoffline m <span class="literal">-n</span> docker<span class="literal">-desktop</span><span class="literal">-data</span> <span class="literal">-d</span> D:\OWQ\Docker\wsl\data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看wsl路径</span></span><br><span class="line">lxrunoffline di <span class="literal">-n</span> docker<span class="literal">-desktop</span></span><br><span class="line">lxrunoffline di <span class="literal">-n</span> docker<span class="literal">-desktop</span><span class="literal">-data</span></span><br></pre></td></tr></table></figure>



<h2 id="WSL2-优化配置"><a href="#WSL2-优化配置" class="headerlink" title="WSL2 优化配置"></a>WSL2 优化配置</h2><blockquote>
<p>配置文档官方传送门 -&gt; <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93c2wvd3NsLWNvbmZpZyNjb25maWd1cmUtZ2xvYmFsLW9wdGlvbnMtd2l0aC13c2xjb25maWc=">🚪</span></p>
</blockquote>
<h3 id="内存配置"><a href="#内存配置" class="headerlink" title="内存配置"></a>内存配置</h3><p>WSL2内存占用高的问题至今存在，修改 Windows 的<code>$home/.wslconfig</code>文件，没有则自己创建一个.</p>
<p><strong>配置文件示例：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[wsl2]</span><br><span class="line"># 自定义 Linux 内核的绝对路径 (默认为默认的WSL)</span><br><span class="line">kernel=&lt;path&gt;</span><br><span class="line"># 给 WSL 2 虚拟机分配的内存大小 (默认为本机内存的50%）</span><br><span class="line">memory=&lt;size&gt;</span><br><span class="line"># 为 WSL 2 虚拟机分配的交换空间 (0 表示没有交换空间, 一般设置为本机内存的25%)</span><br><span class="line">swap=&lt;size&gt;</span><br><span class="line"># 自定义交换虚拟磁盘 vhd 的绝对路径 (可选配置)</span><br><span class="line">swapFile=&lt;path&gt;</span><br><span class="line"># 是否允许将 WSL 2 的端口转发到主机（默认为 true）</span><br><span class="line">localhostForwarding=&lt;bool&gt;</span><br><span class="line"></span><br><span class="line"># `&lt;path&gt;` 必须是带反斜杠的绝对路径，例如 `C:\\Users\\kernel`</span><br><span class="line"># `&lt;size&gt;` 必须在后面加上单位，例如 8 GB 或 512 MB</span><br></pre></td></tr></table></figure>

<p>配置文件好后关闭WSL重新进入即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2>]]></content>
      <tags>
        <tag>wsl</tag>
        <tag>wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>zsh + oh-my-zsh 的简易配置</title>
    <url>/posts/4bfebac1/</url>
    <content><![CDATA[<blockquote>
<p>环境: WSL2 KaileLinux</p>
</blockquote>
<h2 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h2><p>使用系统对应的包管理器安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install zsh</span><br></pre></td></tr></table></figure>

<span id="more"></span>


<h2 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h2><table>
<thead>
<tr>
<th>Method</th>
<th>Command</th>
</tr>
</thead>
<tbody><tr>
<td><strong>curl</strong></td>
<td>sh -c “$(curl -fsSL <span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29obXl6c2gvb2hteXpzaC9tYXN0ZXIvdG9vbHMvaW5zdGFsbC5zaCkmcXVvdDs=">https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></td>
</tr>
<tr>
<td><strong>wget</strong></td>
<td>sh -c “$(wget -O- <span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29obXl6c2gvb2hteXpzaC9tYXN0ZXIvdG9vbHMvaW5zdGFsbC5zaCkmcXVvdDs=">https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></td>
</tr>
<tr>
<td><strong>fetch</strong></td>
<td>sh -c “$(fetch -o - <span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29obXl6c2gvb2hteXpzaC9tYXN0ZXIvdG9vbHMvaW5zdGFsbC5zaCkmcXVvdDs=">https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></td>
</tr>
</tbody></table>
<h2 id="连接被墙问题"><a href="#连接被墙问题" class="headerlink" title="连接被墙问题"></a>连接被墙问题</h2><h3 id="方法一：科学上网"><a href="#方法一：科学上网" class="headerlink" title="方法一：科学上网"></a>方法一：<del>科学上网</del></h3><blockquote>
<p>只可意会不可言传🐕</p>
</blockquote>
<h3 id="方法二：修改hosts"><a href="#方法二：修改hosts" class="headerlink" title="方法二：修改hosts"></a>方法二：修改hosts</h3><blockquote>
<p>该方法只能解燃眉之急😂</p>
</blockquote>
<p>运行ping获取返回ip</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ping raw.githubusercontent.com </span><br></pre></td></tr></table></figure>

<p>修改hosts文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure>

<p>添加对应ip映射即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">185.199.108.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure>



<h2 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h2><p>修改<code>~/.zshrc</code>配置文件</p>
<p><strong>快速添加sudo</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># EscEsc to sudo</span><br><span class="line">bindkey -s &#x27;\e\e&#x27; &#x27;\C-asudo \C-e&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>WSL2下的代理配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Proxy config</span><br><span class="line">export hostip=$(cat /etc/resolv.conf | grep -oP &#x27;(?&lt;=nameserver\ ).*&#x27;)</span><br><span class="line">alias proxyon=&#x27;export https_proxy=&quot;http://$&#123;hostip&#125;:7890&quot; &amp;&amp; export http_proxy=&quot;http://$&#123;hostip&#125;:7890&quot; &amp;&amp; export all_proxy=&quot;socks5://$&#123;hostip&#125;:7890&quot;&#x27;</span><br><span class="line">alias unproxy=&#x27;unset http_proxy &amp;&amp; unset https_proxy &amp;&amp; unset all_proxy&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>常用别名设置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># git log</span><br><span class="line">alias glog=&#x27;git log --graph --pretty=oneline --abbrev-commit&#x27;</span><br><span class="line"></span><br><span class="line"># ls -al</span><br><span class="line">alias ll=ls -al --show-control-chars --color $*</span><br><span class="line"></span><br><span class="line"># Other alias config</span><br><span class="line">alias ipython=&#x27;ipython3&#x27;</span><br><span class="line">alias npm=&#x27;sudo npm&#x27;</span><br><span class="line">alias typora=&#x27;typora.exe&#x27;</span><br></pre></td></tr></table></figure>



<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><blockquote>
<p>主题文件位于 <code>.oh-my-zsh/themes</code> 目录下，可自定义修改</p>
</blockquote>
<h3 id="简单实用的"><a href="#简单实用的" class="headerlink" title="简单实用的"></a>简单实用的</h3><img data-src="https://i.loli.net/2021/08/06/51yhlPEQH7WOCnF.png" style="zoom:80%;" />

<p>修改 <code>~/.zshrc</code> 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZSH_THEME=&quot;ys&quot;</span><br></pre></td></tr></table></figure>



<h3 id="复杂炫酷的"><a href="#复杂炫酷的" class="headerlink" title="复杂炫酷的"></a>复杂炫酷的</h3><img data-src="https://i.loli.net/2021/08/06/K2MYl3UE5T1yDaI.png" style="zoom: 80%;" />

<h4 id="安装powerline主题"><a href="#安装powerline主题" class="headerlink" title="安装powerline主题"></a><strong>安装powerline主题</strong></h4><blockquote>
<p>传送门 -&gt; <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2plcmVteUZyZWVBZ2VudC9vaC1teS16c2gtcG93ZXJsaW5lLXRoZW1l">🚪</span></p>
</blockquote>
<p>克隆主题文件到本地</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme.git powerline</span><br></pre></td></tr></table></figure>

<p>运行安装脚本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> powerline &amp;&amp; ./install_in_omz.sh</span><br></pre></td></tr></table></figure>

<p>修改 <code>~/.zshrc</code> 配置文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改主题</span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;powerline&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改终端为256位颜色模式</span></span><br><span class="line"><span class="built_in">export</span> TERM=<span class="string">&quot;xterm-256color&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>若终端符号显示不全或错位需要设置为 <code>TureType字体</code></p>
<p>如: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RvbnNreS9GaXJhQ29kZQ==">FiraCode</span>、powerline</p>
</blockquote>
<p><strong>安装powerline字体</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install fonts-powerline</span><br></pre></td></tr></table></figure>



<h2 id="配置其他用户可用"><a href="#配置其他用户可用" class="headerlink" title="配置其他用户可用"></a>配置其他用户可用</h2><blockquote>
<p>该方法虽然可以一次配置全局生效, 但会存在权限问题故不建议使用.</p>
<p>建议其它用户最好重新安装配置.</p>
</blockquote>
<p>为root用户建立软连接，即root用户使用当前用户的配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ln -s <span class="variable">$HOME</span>/.oh-my-zsh /root/.oh-my-zsh</span><br><span class="line">sudo ln -s <span class="variable">$HOME</span>/.zshrc /root/.zshrc</span><br></pre></td></tr></table></figure>

<p>切换root进入zsh，若提示无pyenv命令，则再建立软连接即可</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ln -s <span class="variable">$HOME</span>/.pyenv /root/.pyenv</span><br></pre></td></tr></table></figure>

<p>若提示目录权限警告，则在 .zshrc 文件前面添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZSH_DISABLE_COMPFIX=true</span><br></pre></td></tr></table></figure>

<p>若要单独配置，复制相应目录到对应用户主目录下即可</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo cp -r <span class="variable">$HOME</span>/.oh-my-zsh	/root</span><br><span class="line">sudo cp -r <span class="variable">$HOME</span>/.zshrc	/root</span><br></pre></td></tr></table></figure>



<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d0aW5nL2F1dG9qdW1w">autojump</span></p>
<blockquote>
<p>快速跳转</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/wting/autojump.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳转目录安装</span></span><br><span class="line"><span class="built_in">cd</span> autojump</span><br><span class="line">./install.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">./uninstall.py</span><br></pre></td></tr></table></figure>

<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtYXV0b3N1Z2dlc3Rpb25z">zsh-autosuggestions</span></p>
<blockquote>
<p>历史命令灰色提示 </p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一行命令安装</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure>

<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BhdWxpcmlzaC9naXQtb3Blbg==">git-open</span></p>
<blockquote>
<p>快速打开git</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一行命令安装</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/paulirish/git-open.git <span class="variable">$ZSH_CUSTOM</span>/plugins/git-open</span><br></pre></td></tr></table></figure>



<p><strong>配置插件</strong><br>注意：插件中间是以空格分开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugins=(git zsh-autosuggestions)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>wsl</tag>
        <tag>Terminal</tag>
      </tags>
  </entry>
</search>
